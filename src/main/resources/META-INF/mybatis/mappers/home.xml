<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sample.camping.dao.HomeDao">

	<select id="getCountByKeyword" parameterType="map" resultType="int">
		select
			count(*)
		from
			camp_campsites
		<where>
			<choose>
				<when test="gubun == 'sido'">
				campsite_sido = #{city}
				</when>
				<when test="gubun == 'gugun'">
				campsite_gugun = #{city}
				</when>
			</choose>
			<if test="keyword != null">
				and campsite_name like '%' || #{keyword} || '%'
			</if>
		</where>
	</select>
	
	<select id="searchCampSites" parameterType="map" resultType="campSite">
		select
			no, name, sort, latitude, longitude, address, tel, sites, price, likes, hates, photo, point, createDate, usedYN, myCampsiteNo, sido, gugun
		from (	select
					row_number() over(order by CAMPSITE_NO desc) as row_no
					,CAMPSITE_NO			no		
					,CAMPSITE_NAME			name
					,CAMPSITE_SORT			sort
					,CAMPSITE_LATITUDE		latitude
					,CAMPSITE_LONGITUDE		longitude
					,CAMPSITE_ADDRESS		address
					,CAMPSITE_TEL			tel
					,CAMPSITE_SITES			sites
					,CAMPSITE_PRICE			price
					,CAMPSITE_LIKES			likes
					,CAMPSITE_HATES			hates
					,CAMPSITE_PHOTO			photo
					,CAMPSITE_POINT			point
					,CAMPSITE_CREATE_DATE	createDate
					,CAMPSITE_USED_YN		usedYN
					,CAMPSITE_SIDO			sido
					,CAMPSITE_GUGUN			gugun
					,MY_CAMPSITE_NO			myCampsiteNo
				from
					camp_campsites
				<where>
					<choose>
						<when test="gubun == 'sido'">
						campsite_sido = #{city}
						</when>
						<when test="gubun == 'gugun'">
						campsite_gugun = #{city}
						</when>
					</choose>
					<if test="keyword != null">
						and campsite_name like '%' || #{keyword} || '%'
					</if>
				</where>
				)
		where row_no >= #{begin} and row_no &lt;= #{end} 
	</select>
	
	<select id="getGugunBysido" parameterType="string" resultType="campSite">
		SELECT distinct CAMPSITE_GUGUN gugun
		FROM camp_campsites
		where campsite_sido = #{city}
	</select>
	
	<select id="getCampSitesByUpdate" resultType="campSite">
		select no, name, sort, latitude, longitude, address, tel, sites, price, likes, hates, photo, point, createDate, usedYn, sido, gugun
		from (select
				campsite_no no,
				campsite_name name,
				campsite_sort sort,
				campsite_latitude latitude,
				campsite_longitude longitude,
				campsite_address address,
				campsite_tel tel,
				campsite_sites sites,
				campsite_price price,
				campsite_likes likes,
				campsite_hates hates,
				campsite_photo photo,
				campsite_point point,
				campsite_create_date createDate,
				campsite_used_yn usedYn,
				campsite_sido sido,
				campsite_gugun gugun
			from
				camp_campsites
			order by
				campsite_no desc)
		where rownum &lt;= 20	
	</select>
	
	<select id="getCounts" resultType="hashmap">
		select (select count(*) from camp_campsites) TOTAL,
			(select count(*) from camp_campsites where CAMPSITE_SORT = 'CAR') CAR,
			(select count(*) from camp_campsites where CAMPSITE_SORT = 'NORMAL') NORMAL,
			(select count(*) from camp_campsites where CAMPSITE_SORT = 'CAMP') CAMP
		from  dual
	</select>
	
	<select id="getAllReviewBoard" resultType="reviewBoard">
		select
			review_no no,
			review_title title,
			review_contents contents,
			review_likes likes,
			review_hates hates,
			review_views,
			review_create_date createDate
		from
			camp_review_boards
		where rownum &lt;= 7
	</select>

</mapper>