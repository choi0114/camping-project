<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sample.camping.dao.HomeDao">

	<select id="getCountByKeyword" parameterType="map" resultType="int">
		select
			count(*)
		from
			camp_campsites
		<where>
			<choose>
				<when test="gubun == 'sido'">
				campsite_sido = #{city}
				</when>
				<when test="gubun == 'gugun'">
				campsite_gugun = #{city}
				</when>
			</choose>
			<if test="keyword != null">
				and campsite_name like '%' || #{keyword} || '%'
			</if>
		</where>
	</select>
	
	<select id="searchCampSites" parameterType="map" resultType="campSite">
		select
			no, name, sort, latitude, longitude, address, tel, sites, price, likes, hates, photo, point, createDate, usedYN, myCampsiteNo, sido, gugun
		from (	select
					row_number() over(order by CAMPSITE_NO desc) as row_no
					,CAMPSITE_NO			no		
					,CAMPSITE_NAME			name
					,CAMPSITE_SORT			sort
					,CAMPSITE_LATITUDE		latitude
					,CAMPSITE_LONGITUDE		longitude
					,CAMPSITE_ADDRESS		address
					,CAMPSITE_TEL			tel
					,CAMPSITE_SITES			sites
					,CAMPSITE_PRICE			price
					,CAMPSITE_LIKES			likes
					,CAMPSITE_HATES			hates
					,CAMPSITE_PHOTO			photo
					,CAMPSITE_POINT			point
					,CAMPSITE_CREATE_DATE	createDate
					,CAMPSITE_USED_YN		usedYN
					,CAMPSITE_SIDO			sido
					,CAMPSITE_GUGUN			gugun
					,MY_CAMPSITE_NO			myCampsiteNo
				from
					camp_campsites
				<where>
					<choose>
						<when test="gubun == 'sido'">
						campsite_sido = #{city}
						</when>
						<when test="gubun == 'gugun'">
						campsite_gugun = #{city}
						</when>
					</choose>
					<if test="keyword != null">
						and campsite_name like '%' || #{keyword} || '%'
					</if>
				</where>
				)
		where row_no >= #{begin} and row_no &lt;= #{end} 
	</select>
	
	<select id="getGugunBysido" parameterType="string" resultType="campSite">
		SELECT distinct CAMPSITE_GUGUN gugun
		FROM camp_campsites
		where campsite_sido = #{city}
	</select>
	
	<select id="getCampSitesByUpdate" resultType="map">
		select no, name, sort, latitude, longitude, address, tel, sites, price, likes, hates, photo, point, createDate, usedYn, sido, gugun, likeno
		from (select
				A.campsite_no no,
				A.campsite_name name,
				A.campsite_sort sort,
				A.campsite_latitude latitude,
				A.campsite_longitude longitude,
				A.campsite_address address,
				A.campsite_tel tel,
				A.campsite_sites sites,
				A.campsite_price price,
				A.campsite_likes likes,
				A.campsite_hates hates,
				A.campsite_photo photo,
				A.campsite_point point,
				A.campsite_create_date createDate,
				A.campsite_used_yn usedYn,
				A.campsite_sido sido,
				A.campsite_gugun gugun,
				B.like_campsite_no likeno
			from
				camp_campsites A, camp_like_campsite B
			where
				A.campsite_no = B.campsite_no(+)
			order by
				A.campsite_no asc)
		where rownum &lt;= 20	
	</select>
	
	<select id="getCounts" resultType="hashmap">
		select (select count(*) from camp_campsites) TOTAL,
			(select count(*) from camp_campsites where CAMPSITE_SORT = 'CAR') CAR,
			(select count(*) from camp_campsites where CAMPSITE_SORT = 'NORMAL') NORMAL,
			(select count(*) from camp_campsites where CAMPSITE_SORT = 'CAMP') CAMP
		from  dual
	</select>
	
	<select id="getAllReviewBoard" resultType="reviewBoard">
		select *
		from (
			select
				A.review_no no,
				A.review_title title,
				A.review_contents contents,
				A.review_likes likes,
				A.review_hates hates,
				A.review_views,
				A.review_create_date createDate,
				(select count(*) from camp_review_comments where review_no = A.review_no) cnt
			from
				camp_review_boards A
			order by A.review_no desc
		)
		where 
			rownum &lt;= 7
	</select>
	
	<select id="getAllFreeBoard" resultType="freeBoard">
		select *
		from (
			select
				A.Free_no no,
				A.free_title title,
				A.free_contents contents,
				A.free_likes likes,
				A.free_hates hates,
				A.free_views views,
				A.free_create_date createDate,
				(select count(*) from camp_free_comments where free_no = A.free_no) cnt
			from
				camp_free_boards A
			order by A.free_no desc
		)
		where
			rownum &lt;= 7
	</select>
	
	<select id="getAllNoticeBoard" resultType="noticeBoard">
		select *
		from (select
				notice_no no,
				notice_title title,
				notice_contents contents,
				notice_likes likes,
				notice_hates hates,
				notice_views views,
				notice_create_date createDate
			from
				camp_notice_boards
			order by notice_no desc
			)
		where
			rownum &lt;= 2
	</select>
	
	<insert id="addBookmark" parameterType="map">
		insert into 
			camp_like_campsite (like_campsite_no, user_id, campsite_no)
		values
			(camp_camping_site_seq.nextval, #{id}, #{no})
	</insert>
	
	<delete id="deleteBookmark" parameterType="int">
		delete from camp_like_campsite
		where campsite_no = ${no}
	</delete>

</mapper>