<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sample.camping.dao.MypageDao">

	<select id="getJoiningBoardsById" parameterType="string" resultType="joiningBoard">
		select 
			joining_no no,
			joining_title title,
			joining_contents contents,
			joining_create_date createDate,
			user_id "user.id"
		from 
			camp_joining_boards
		where 
			user_id = #{userId}
	</select>
	
	<select id="getOpinionBoardById" parameterType="string" resultType="opinionBoard">
		select 
			opinion_no no,
			opinion_title title,
			opinion_contents contents,
			opinion_create_date createDate,
			user_id "user.id"
		from 
			camp_opinion_boards
		where 
			user_id = #{userId}
	</select>
	
	<select id="getReviewBoaedById" parameterType="string" resultType="reviewBoard">
		select
			review_no no,
			review_title title,
			review_contents contents,
			review_create_date createDate,
			user_id "user.id"
		from 
			camp_review_boards
		where 
			user_id = #{userId}
	</select>
	
	<select id="getFreeBoardById" parameterType="string" resultType="freeBoard">
		select 
			free_no no,
			free_title title,
			free_contents contents,
			free_create_date createDate,
			user_id "user.id"
		from 
			camp_free_boards
		where 
			user_id = #{userId}
	</select>
	
	<select id="getJoiningBoardCommentById" parameterType="string" resultType="joiningBoardComment">
		select 
			comment_no no,
			comment_contents contents,
			comment_create_date createDate,
			joining_no "joiningBoard.no",
			user_id "user.id"
		from 
			camp_joining_comments
		where 
			user_id = #{userId}
	</select>
	
	<select id="getOpinionBoardCommentById" parameterType="string" resultType="opinionComment">
		select
			a.comment_no no,
			a.comment_contents contents,
			a.comment_create_date createDate,
			b.opinion_no "opinionBoard.no",
			b.opinion_title "opinionBoard.title",
			a.user_id "user.id"
		from 
			camp_opinion_comments a, camp_opinion_boards b
		where 
			a.opinion_no = b.opinion_no
		and
			a.user_id = #{userId}
	</select>
	
	<select id="getReviewBoardCommentById" parameterType="string" resultType="reviewBoardComment">
		select 
			comment_no no,
			comment_contents contents,
			comment_create_date createDate,
			review_no "reviewBoard.no",
			user_id "user.id"
		from
			camp_review_comments
		where 
			user_id = #{userId}
	</select>
	
	<select id="getFreeBoardCommentById" parameterType="string" resultType="freeBoardComment">
		select 
			comment_no no,
			comment_contents contents,
			comment_create_date createDate,
			free_no "freeBoard.no",
			user_id "user.id"
		from 
			camp_free_comments
		where 
			user_id = #{userId}
	</select>
	
	<select id="getAllCommentCount" parameterType="string" resultType="int">
		select(free.cn1 + joining.cn2 + opinion.cn3 + review.cn4) cnt
			from (
			        select count(*) cn1
			        from camp_free_comments
			        where user_id = #{value}
			    ) free,
			    (
			        select count(*) cn2
			        from camp_joining_comments
			        where user_id = #{value}
			    ) joining,
			    (
			        select count(*) cn3
			        from camp_opinion_comments
			        where user_id = #{value}
			    ) opinion,
			    (
			        select count(*) cn4
			        from camp_review_comments
			        where user_id = #{value}
			    ) review
	</select>
	
	<select id="getLikeCampsiteById" parameterType="string" resultType="likeCampsite">
		select 
			a.like_campsite_no no,
			a.like_campsite_create_date createDate,
			a.user_id "user.id",
			a.campsite_no "campSite.no",
			b.campsite_name "campSite.name",
			b.campSite_sort "campSite.sort",
			b.campSite_address "campSite.address",
			b.campSite_tel "campSite.tel",
			b.campSite_photo "campSite.proto",
			b.campSite_point "campSite.point",
			b.campSite_sido "campSite.sido"
		from
			camp_like_campsite a, camp_campsites b
		where
			a.campsite_no = b.campsite_no
		and 
			a.user_id = #{value}
	</select>
	
	<select id="getMyAddCampById" parameterType="string" resultType="myCampsite">
		select 
			a.my_campsite_no no,
			a.my_campsite_status status,
			a.my_campsite_create_date createDate,
			a.user_id "user.id",
			b.campsite_no "campSite.no",
			b.campsite_name "campSite.name",
			b.campsite_sort "campSite.sort",
			b.campSite_address "campSite.address",
			b.campsite_address "campSite.photo",
			b.campsite_used_yn "campSite.usedYn"
			
		from 
			camp_my_campsites a, camp_campsites b
		where
			b.my_campsite_no = a.my_campsite_no
		and
			user_id = #{value}
	</select>
	
	<update id="updateUser" parameterType="map">
		update camp_users
			set 
			<if test="password!=null and !password.equals('')">
				user_password = #{password}
			</if>
			<if test="name!=null and !name.equals('')">
			    user_name          = #{name},
			</if>
			<if test="nickName!=null and !nickName.equals('')">
			    user_nick_name     = #{nickName},
			</if>
			<if test="email!=null and !email.equals('')">
			    user_email         = #{email},
			</if>
			<if test="profilePhoto!=null and !profilePhoto.equals('')">
			    user_profile_photo = #{profilePhoto},
			</if>
			<if test="type!=null and !type.equals('')">
			    user_type          = #{type},
			</if>
			<if test="usedYn!=null and !usedYn.equals('')">
			    user_used_yn       = #{usedYn}
			</if>
	</update>
	
</mapper>