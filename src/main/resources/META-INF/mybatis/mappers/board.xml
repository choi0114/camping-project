<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.sample.camping.dao.BoardDao">
	<select id="selectJoinByNo" parameterType="int" resultType="board">
		SELECT 
			B.JOINING_NO				no
			, B.JOINING_TITLE			title
			, B.JOINING_CONTENTS		contents
			, B.JOINING_LIKES			likes
			, B.JOINING_HATES			hates
			, B.JOINING_VIEWS			views
			, B.JOINING_CREATE_DATE	createDate
			, U.USER_NICK_NAME			userNick
			, U.USER_PROFILE_PHOTO			profilePhoto	 
			, B.JOINING_THUMBNAIL		thumbnail
			,(SELECT count(*) FROM CAMP_JOINING_COMMENTS  WHERE JOINING_NO = B.JOINING_NO )  commentCnt
		FROM CAMP_JOINING_BOARDS B, CAMP_USERS U
		where JOINING_NO = #{value}
		and B.USER_ID = U.USER_ID
	</select>
	<select id="selectJoinCount" resultType="int" parameterType="map">
		SELECT count(*)	
		FROM CAMP_JOINING_BOARDS
		<if test="sort != null">
			<choose>
				<when test="sort == 'title'">
					where JOINING_TITLE like '%' || #{keyword} || '%' 
				</when>
				<when test="sort == 'contents'">
					where JOINING_CONTENTS like '%' || #{keyword} || '%' 
				</when>
			</choose>
		</if>
	</select>
	<select id="selectJoin" resultType="board">
		SELECT 
			B.JOINING_NO				no
			, B.JOINING_TITLE			title
			, B.JOINING_CONTENTS		contents
			, B.JOINING_LIKES			likes
			, B.JOINING_HATES			hates
			, B.JOINING_VIEWS			views
			, B.JOINING_CREATE_DATE		createDate
			, U.USER_NICK_NAME			userNick
			, U.USER_PROFILE_PHOTO			profilePhoto	 
			, B.JOINING_THUMBNAIL		thumbnail
		FROM (SELECT 
				row_number() over(order by JOINING_NO DESC) as ROW_NO
				, JOINING_NO
				, JOINING_TITLE
				, JOINING_CONTENTS
				, JOINING_LIKES
				, JOINING_HATES
				, JOINING_VIEWS
				, JOINING_CREATE_DATE
				, USER_ID
				, JOINING_THUMBNAIL		
			FROM CAMP_JOINING_BOARDS)B, CAMP_USERS U
		WHERE ROW_NO >= 1 AND ROW_NO &lt;= 5
		and B.USER_ID = U.USER_ID
		ORDER BY row_no ASC
	</select>
	<select id="selectJoinPage" parameterType="map" resultType="board">
		SELECT
			B.JOINING_NO				no
			, B.JOINING_TITLE			title
			, B.JOINING_CONTENTS		contents
			, B.JOINING_LIKES			likes
			, B.JOINING_HATES			hates
			, B.JOINING_VIEWS			views
			, B.JOINING_CREATE_DATE	createDate
			, U.USER_NICK_NAME			userNick
			, U.USER_PROFILE_PHOTO			profilePhoto		 
			, B.JOINING_THUMBNAIL		thumbnail
		 	,(SELECT count(*) FROM CAMP_JOINING_COMMENTS  WHERE JOINING_NO = B.JOINING_NO )  commentCnt
		FROM (SELECT 
				row_number() over(order by JOINING_NO DESC) as ROW_NO
				, JOINING_NO
				, JOINING_TITLE
				, JOINING_CONTENTS
				, JOINING_LIKES
				, JOINING_HATES
				, JOINING_VIEWS
				, JOINING_CREATE_DATE
				, USER_ID
				, JOINING_THUMBNAIL		
			FROM CAMP_JOINING_BOARDS
			<if test="sort != null">
				<choose>
					<when test="sort == 'title'">
						where JOINING_TITLE like '%' || #{keyword} || '%' 
					</when>
					<when test="sort == 'contents'">
						where JOINING_CONTENTS like '%' || #{keyword} || '%' 
					</when>
				</choose>
			</if>
			) B, CAMP_USERS U
		where row_no >= #{begin} and row_no &lt;= #{end} 
		and B.USER_ID = U.USER_ID
		ORDER BY row_no ASC
	</select>
	
	<insert id="addJoin" parameterType="Board">
		insert into CAMP_JOINING_BOARDS(
			JOINING_NO
			,JOINING_TITLE
			,JOINING_CONTENTS
			,USER_ID
			, JOINING_THUMBNAIL
		)
		values (CAMP_BOARD_SEQ.nextval,#{title},#{contents},#{userId},#{thumbnail})
	</insert>
	<select id="selectOpinionByNo" parameterType="int" resultType="board">
		SELECT 
			B.OPINION_NO				no
			, B.OPINION_TITLE			title
			, B.OPINION_CONTENTS		contents
			, B.OPINION_LIKES			likes
			, B.OPINION_HATES			hates
			, B.OPINION_VIEWS			views
			, B.OPINION_CREATE_DATE	createDate
			, U.USER_NICK_NAME			userNick
			, U.USER_PROFILE_PHOTO			profilePhoto
			, C.CAMPSITE_NAME		campsiteName
			, B.OPINION_THUMBNAIL		thumbnail
			,(SELECT count(*) FROM CAMP_OPINION_COMMENTS  WHERE OPINION_NO = B.OPINION_NO )  commentCnt
		FROM CAMP_OPINION_BOARDS B,  CAMP_USERS U ,CAMP_CAMPSITES C
		where OPINION_NO = #{value}
		and B.CAMPSITE_NO = C.CAMPSITE_NO
		and B.USER_ID = U.USER_ID
		
	</select>
	<select id="selectOpinionCount" resultType="int" parameterType="map">
		SELECT count(*)	
		FROM CAMP_OPINION_BOARDS
		<if test="sort != null">
			<choose>
				<when test="sort == 'title'">
					where OPINION_TITLE like '%' || #{keyword} || '%' 
				</when>
				<when test="sort == 'contents'">
					where OPINION_CONTENTS like '%' || #{keyword} || '%' 
				</when>
			</choose>
		</if>
	</select>
	<select id="selectOpinion" resultType="board">
		SELECT 
			B.OPINION_NO				no
			, B.OPINION_TITLE			title
			, B.OPINION_CONTENTS		contents
			, B.OPINION_LIKES			likes
			, B.OPINION_HATES			hates
			, B.OPINION_VIEWS			views
			, B.OPINION_CREATE_DATE	createDate
			, U.USER_NICK_NAME			userNick
			, U.USER_PROFILE_PHOTO			profilePhoto
			, C.CAMPSITE_NAME		campsiteName
			, B.OPINION_THUMBNAIL		thumbnail
			
		FROM (SELECT 
				row_number() over(order by OPINION_NO desc) as ROW_NO
				, OPINION_NO
				, OPINION_TITLE
				, OPINION_CONTENTS
				, OPINION_LIKES
				, OPINION_HATES
				, OPINION_VIEWS
				, OPINION_CREATE_DATE
				, USER_ID
				, CAMPSITE_NO
				, OPINION_THUMBNAIL		
			FROM CAMP_OPINION_BOARDS) B,  CAMP_USERS U ,CAMP_CAMPSITES C
		WHERE ROW_NO >= 1 AND ROW_NO &lt;= 5
		and B.USER_ID = U.USER_ID
		and B.CAMPSITE_NO = C.CAMPSITE_NO
		ORDER BY row_no asc
	</select>
	<select id="selectOpinionPage" parameterType="map" resultType="board">
		SELECT 
			B.OPINION_NO				no
			, B.OPINION_TITLE			title
			, B.OPINION_CONTENTS		contents
			, B.OPINION_LIKES			likes
			, B.OPINION_HATES			hates
			, B.OPINION_VIEWS			views
			, B.OPINION_CREATE_DATE	createDate
			, U.USER_NICK_NAME			userNick
			, U.USER_PROFILE_PHOTO			profilePhoto
			, C.CAMPSITE_NAME		campsiteName
			, B.OPINION_THUMBNAIL		thumbnail
			,(SELECT count(*) FROM CAMP_OPINION_COMMENTS  WHERE OPINION_NO = B.OPINION_NO )  commentCnt
		FROM (SELECT 
				row_number() over(order by OPINION_NO desc) as ROW_NO
				, OPINION_NO
				, OPINION_TITLE
				, OPINION_CONTENTS
				, OPINION_LIKES
				, OPINION_HATES
				, OPINION_VIEWS
				, OPINION_CREATE_DATE
				, USER_ID
				, CAMPSITE_NO
				, OPINION_THUMBNAIL		
			FROM CAMP_OPINION_BOARDS
			<if test="sort != null">
				<choose>
					<when test="sort == 'title'">
						where OPINION_TITLE like '%' || #{keyword} || '%' 
					</when>
					<when test="sort == 'contents'">
						where OPINION_CONTENTS like '%' || #{keyword} || '%' 
					</when>
				</choose>
			</if>
			) B , CAMP_USERS U ,CAMP_CAMPSITES C
		where row_no >= #{begin} and row_no &lt;= #{end} 
		and B.USER_ID = U.USER_ID
		and B.CAMPSITE_NO = C.CAMPSITE_NO
		ORDER BY row_no asc
	</select>
	<insert id="addOpinion" parameterType="Board">
		insert into CAMP_OPINION_BOARDS(
			OPINION_NO
			,OPINION_TITLE
			,OPINION_CONTENTS
			,USER_ID
			,CAMPSITE_NO
			, OPINION_THUMBNAIL		
		)	
		values (CAMP_BOARD_SEQ.nextval,#{title},#{contents},#{userId},#{campsiteNo},#{thumbnail})
	</insert>
	<select id="selectReviewByNo" parameterType="int" resultType="board">
		SELECT 
			B.REVIEW_NO				no
			, B.REVIEW_TITLE			title
			, B.REVIEW_CONTENTS		contents
			, B.REVIEW_LIKES			likes
			, B.REVIEW_HATES			hates
			, B.REVIEW_VIEWS			views
			, B.REVIEW_CREATE_DATE	createDate
			, U.USER_NICK_NAME			userNick
			, U.USER_PROFILE_PHOTO			profilePhoto
			, C.CAMPSITE_NAME		campsiteName
			, B.REVIEW_THUMBNAIL		thumbnail
			,(SELECT count(*) FROM CAMP_REVIEW_COMMENTS  WHERE REVIEW_NO = B.REVIEW_NO )  commentCnt
		FROM CAMP_REVIEW_BOARDS B , CAMP_USERS U ,CAMP_CAMPSITES C
		where REVIEW_NO = #{value}
		and B.USER_ID = U.USER_ID
		and B.CAMPSITE_NO = C.CAMPSITE_NO
	</select>
	<select id="selectReviewCount" resultType="int" parameterType="map">
		SELECT count(*)	
		FROM CAMP_REVIEW_BOARDS
		<if test="sort != null">
			<choose>
				<when test="sort == 'title'">
					where REVIEW_TITLE like '%' || #{keyword} || '%' 
				</when>
				<when test="sort == 'contents'">
					where REVIEW_CONTENTS like '%' || #{keyword} || '%' 
				</when>
			</choose>
		</if>
	</select>
	<select id="selectReview" resultType="board">
		SELECT 
			B.REVIEW_NO				no
			, B.REVIEW_TITLE			title
			, B.REVIEW_CONTENTS		contents
			, B.REVIEW_LIKES			likes
			, B.REVIEW_HATES			hates
			, B.REVIEW_VIEWS			views
			, B.REVIEW_CREATE_DATE	createDate
			, U.USER_NICK_NAME			userNick
			, U.USER_PROFILE_PHOTO			profilePhoto
			, C.CAMPSITE_NAME		campsiteName
			, B.REVIEW_THUMBNAIL		thumbnail
		FROM (SELECT 
				row_number() over(order by REVIEW_NO desc) as ROW_NO
				, REVIEW_NO
				, REVIEW_TITLE
				, REVIEW_CONTENTS
				, REVIEW_LIKES
				, REVIEW_HATES
				, REVIEW_VIEWS
				, REVIEW_CREATE_DATE
				, USER_ID
				, CAMPSITE_NO
				, REVIEW_THUMBNAIL		
			FROM CAMP_REVIEW_BOARDS) B, CAMP_USERS U ,CAMP_CAMPSITES C
		WHERE ROW_NO >= 1 AND ROW_NO &lt;= 5
		and B.USER_ID = U.USER_ID
		and B.CAMPSITE_NO = C.CAMPSITE_NO
		ORDER BY row_no asc
	</select>
	<select id="selectReviewPage" parameterType="map" resultType="board">
		SELECT 
			B.REVIEW_NO				no
			, B.REVIEW_TITLE			title
			, B.REVIEW_CONTENTS		contents
			, B.REVIEW_LIKES			likes
			, B.REVIEW_HATES			hates
			, B.REVIEW_VIEWS			views
			, B.REVIEW_CREATE_DATE	createDate
			, U.USER_NICK_NAME			userNick
			, U.USER_PROFILE_PHOTO			profilePhoto
			, C.CAMPSITE_NAME		campsiteName
			, B.REVIEW_THUMBNAIL		thumbnail
			,(SELECT count(*) FROM CAMP_REVIEW_COMMENTS  WHERE REVIEW_NO = B.REVIEW_NO )  commentCnt
		FROM (SELECT 
				row_number() over(order by REVIEW_NO desc) as ROW_NO
				, REVIEW_NO
				, REVIEW_TITLE
				, REVIEW_CONTENTS
				, REVIEW_LIKES
				, REVIEW_HATES
				, REVIEW_VIEWS
				, REVIEW_CREATE_DATE
				, USER_ID
				, CAMPSITE_NO
				, REVIEW_THUMBNAIL		
			FROM CAMP_REVIEW_BOARDS
			<if test="sort != null">
				<choose>
					<when test="sort == 'title'">
						where REVIEW_TITLE like '%' || #{keyword} || '%' 
					</when>
					<when test="sort == 'contents'">
						where REVIEW_CONTENTS like '%' || #{keyword} || '%' 
					</when>
				</choose>
			</if>
			) B,  CAMP_USERS U ,CAMP_CAMPSITES C
		where row_no >= #{begin} and row_no &lt;= #{end}
		and B.USER_ID = U.USER_ID
		and B.CAMPSITE_NO = C.CAMPSITE_NO
		ORDER BY row_no asc
	</select>
	<insert id="addReview" parameterType="Board">
		insert into CAMP_REVIEW_BOARDS(
			REVIEW_NO
			,REVIEW_TITLE
			,REVIEW_CONTENTS
			,USER_ID
			,CAMPSITE_NO
			, REVIEW_THUMBNAIL		
		)
		values (CAMP_BOARD_SEQ.nextval,#{title},#{contents},#{userId},#{campsiteNo},#{thumbnail})
	</insert>
	<select id="selectFreeByNo" parameterType="int" resultType="board">
		SELECT 
			B.FREE_NO					no
			, B.FREE_TITLE			title
			, B.FREE_CONTENTS			contents
			, B.FREE_LIKES			likes
			, B.FREE_HATES			hates
			, B.FREE_VIEWS			views
			, B.FREE_CREATE_DATE		createDate
			, U.USER_NICK_NAME			userNick
			, U.USER_PROFILE_PHOTO			profilePhoto
		 	, B.FREE_THUMBNAIL		thumbnail
		 	,(SELECT count(*) FROM CAMP_FREE_COMMENTS  WHERE FREE_NO = B.FREE_NO )  commentCnt
		FROM CAMP_FREE_BOARDS B , CAMP_USERS U
		where FREE_NO = #{value}
		and B.USER_ID = U.USER_ID
	</select>
	<select id="selectFreeCount" resultType="int" parameterType="map">
		SELECT count(*)	
		FROM CAMP_FREE_BOARDS
		<if test="sort != null">
			<choose>
				<when test="sort == 'title'">
					where FREE_TITLE like '%' || #{keyword} || '%' 
				</when>
				<when test="sort == 'contents'">
					where FREE_CONTENTS like '%' || #{keyword} || '%' 
				</when>
			</choose>
		</if>
	</select>
	<select id="selectFree" resultType="board">
		SELECT 
			B.FREE_NO					no
			, B.FREE_TITLE			title
			, B.FREE_CONTENTS			contents
			, B.FREE_LIKES			likes
			, B.FREE_HATES			hates
			, B.FREE_VIEWS			views
			, B.FREE_CREATE_DATE		createDate
			, U.USER_NICK_NAME			userNick
			, U.USER_PROFILE_PHOTO			profilePhoto
		 	, B.FREE_THUMBNAIL		thumbnail
		FROM (SELECT 
				row_number() over(order by FREE_NO desc) as ROW_NO
				, FREE_NO
				, FREE_TITLE
				, FREE_CONTENTS
				, FREE_LIKES
				, FREE_HATES
				, FREE_VIEWS
				, FREE_CREATE_DATE
				, USER_ID
				, FREE_THUMBNAIL		
			FROM CAMP_FREE_BOARDS) B,  CAMP_USERS U
		WHERE ROW_NO >= 1 AND ROW_NO &lt;= 5
		and B.USER_ID = U.USER_ID
		ORDER BY row_no asc
	</select>
	<select id="selectFreePage" parameterType="map" resultType="board">
		SELECT 
			B.FREE_NO					no
			, B.FREE_TITLE			title
			, B.FREE_CONTENTS			contents
			, B.FREE_LIKES			likes
			, B.FREE_HATES			hates
			, B.FREE_VIEWS			views
			, B.FREE_CREATE_DATE		createDate
			, U.USER_NICK_NAME			userNick
			, U.USER_PROFILE_PHOTO			profilePhoto
		 	, B.FREE_THUMBNAIL		thumbnail
		 	,(SELECT count(*) FROM CAMP_FREE_COMMENTS  WHERE FREE_NO = B.FREE_NO )  commentCnt
		FROM (SELECT 
				row_number() over(order by FREE_NO desc) as ROW_NO
				, FREE_NO
				, FREE_TITLE
				, FREE_CONTENTS
				, FREE_LIKES
				, FREE_HATES
				, FREE_VIEWS
				, FREE_CREATE_DATE
				, USER_ID
				, FREE_THUMBNAIL		
			FROM CAMP_FREE_BOARDS
			<if test="sort != null">
				<choose>
					<when test="sort == 'title'">
						where FREE_TITLE like '%' || #{keyword} || '%' 
					</when>
					<when test="sort == 'contents'">
						where FREE_CONTENTS like '%' || #{keyword} || '%' 
					</when>
				</choose>
			</if>
			) B , CAMP_USERS U
		where row_no >= #{begin} and row_no &lt;= #{end}
		and B.USER_ID = U.USER_ID 
		ORDER BY row_no asc
	</select>
	<insert id="addFree" parameterType="Board">
		insert into CAMP_FREE_BOARDS(
			FREE_NO
			, FREE_TITLE
			, FREE_CONTENTS
			, USER_ID
			, FREE_THUMBNAIL		
		)
		values (CAMP_BOARD_SEQ.nextval,#{title},#{contents},#{userId},#{thumbnail})
	</insert>
	<update id="updateLike" parameterType="map">
		update 
			<choose>
				<when test="boardType == 1">
					 CAMP_JOINING_BOARDS 
				</when>
				<when test="boardType == 2">
					 CAMP_REVIEW_BOARDS 
				</when>
				<when test="boardType == 3">
					 CAMP_OPINION_BOARDS 
				</when>
				<when test="boardType == 4">
					 CAMP_FREE_BOARDS 
				</when>
			</choose>
		set 
			<choose>
				<when test="boardType == 1">
					 joining_likes = #{like} + 1
				</when>
				<when test="boardType == 2">
					 REVIEW_likes = #{like} + 1
				</when>
				<when test="boardType == 3">
					 OPINION_likes = #{like} + 1
				</when>
				<when test="boardType == 4">
					 FREE_likes = #{like} + 1
				</when>
			</choose> 
		where 
			<choose>
				<when test="boardType == 1">
					 joining_NO = #{boardNo}
				</when>
				<when test="boardType == 2">
					 REVIEW_NO = #{boardNo}
				</when>
				<when test="boardType == 3">
					 OPINION_NO = #{boardNo}
				</when>
				<when test="boardType == 4">
					 FREE_NO = #{boardNo}
				</when>
			</choose> 
	</update>
	<update id="updateHate" parameterType="map">
		update 
			<choose>
				<when test="boardType == 1">
					 CAMP_JOINING_BOARDS 
				</when>
				<when test="boardType == 2">
					 CAMP_REVIEW_BOARDS 
				</when>
				<when test="boardType == 3">
					 CAMP_OPINION_BOARDS 
				</when>
				<when test="boardType == 4">
					 CAMP_FREE_BOARDS 
				</when>
			</choose>
		set 
			<choose>
				<when test="boardType == 1">
					 joining_hates = #{hate} + 1
				</when>
				<when test="boardType == 2">
					 REVIEW_hates = #{hate} + 1
				</when>
				<when test="boardType == 3">
					 OPINION_hates = #{hate} + 1
				</when>
				<when test="boardType == 4">
					 FREE_hates = #{hate} + 1
				</when>
			</choose> 
		where 
			<choose>
				<when test="boardType == 1">
					 joining_NO = #{boardNo}
				</when>
				<when test="boardType == 2">
					 REVIEW_NO = #{boardNo}
				</when>
				<when test="boardType == 3">
					 OPINION_NO = #{boardNo}
				</when>
				<when test="boardType == 4">
					 FREE_NO = #{boardNo}
				</when>
			</choose> 
	</update>
</mapper>